/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
// ------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BKS |
// | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  | RET |
// | NOP |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | NOP |
//                   | NUM | SYM | SPC |   | SPC | SYM | NUM |
            display-name = "Base";
            bindings = <
    &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSPC
    &kp ESC    &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp RET
    &none      &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &none
                                   &mo 2     &mo 1     &kp SPACE &kp SPACE &mo 1     &mo 2 
            >;
        };
           
        symbol_layer {
// ------------------------------------------------------------------------------
// | NOP |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  -  |  =  |  \  |
// | ESC | NOP |  [  |  {  |  (  |  '  |   |  "  |  )  |  }  |  ]  |  :  | RET |
// | NOP | NOP | NOP | NOP | NOP | NOP |   |  |  | NOP | NOP |  _  |  +  | NOP |
//                   | NOP |     | SPC |   | ENT |     | NOP |
            display-name = "Symbols";
            bindings = <
    &none     &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT &kp CARET &kp AMPS  &kp STAR  &kp MINUS &kp EQUAL &kp BSLH 
    &trans    &none     &kp LBKT  &kp LBRC  &kp LPAR  &kp SQT   &kp DQT   &kp RPAR  &kp RBRC  &kp RBKT  &kp SEMI  &trans
    &none     &none     &none     &none     &none     &none     &kp PIPE  &none     &none     &kp UNDER &kp PLUS  &kp FSLH 
                                  &none     &trans    &trans    &trans    &trans    &none
            >;
        };

        nums_layer {
// ------------------------------------------------------------------------------
// |  F1 |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | F12 |
// | ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | NOP |
// | NOP | NOP | NOP | NOP | NOP | NOP |   | NOP | NOP | NOP | NOP | NOP | NOP |
//                   | NOP |     | SPC |   | ENT |     | NOP |
            display-name = "Nums";
            bindings = <
    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12 
    &trans    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &none
    &none     &none     &none     &none     &none     &none     &none     &none     &none     &none     &none     &none 
                                  &trans    &none     &trans    &trans    &none     &trans
            >;
        };

        extra_1 {
            status = "reserved";
        };

        extra_2 {
            status = "reserved";
        };

        extra_3 {
            status = "reserved";
        };
    };

// Key Positions
// ------------------------------------------------------------------------------
// |  0  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  10 |  11 |
// |  12 |  13 |  14 |  15 |  16 |  17 |   |  18 |  19 |  20 |  21 |  22 |  23 |
// |  24 |  25 |  26 |  27 |  28 |  29 |   |  30 |  31 |  32 |  33 |  34 |  35 |
//                   |  36 |  37 |  38 |   |  39 |  40 |  41 |
    combos {
        compatible = "zmk,combos";
        // Left side
        combo_lshift {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LSHFT>;
        };

        combo_lctrl {
            timeout-ms = <50>;
            key-positions = <14 16>;
            bindings = <&kp LCTRL>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&kp LALT>;
        };

        combo_lmeta {
            timeout-ms = <50>;
            key-positions = <13 14 15>;
            bindings = <&kp LMETA>;
        };

        combo_lctrlshift {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp LSHFT &kp LCTRL>;
        };

        combo_laltshift {
            timeout-ms = <50>;
            key-positions = <13 15>;
            bindings = <&kp LSHFT &kp LALT>;
        };

        combo_lctrlalt {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LCTRL &kp LALT>;
        };


        // Right Side
        combo_rshift {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp RSHFT>;
        };

        combo_rctrl {
            timeout-ms = <50>;
            key-positions = <19 21>;
            bindings = <&kp RCTRL>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <19 22>;
            bindings = <&kp LALT>;
        };

        combo_rmeta {
            timeout-ms = <50>;
            key-positions = <20 21 22>;
            bindings = <&kp RMETA>;
        };

        combo_rctrlshift {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp RSHFT &kp RCTRL>;
        };

        combo_raltshift {
            timeout-ms = <50>;
            key-positions = <20 22>;
            bindings = <&kp RSHFT &kp LALT>;
        };

        combo_rctrlalt {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp RCTRL &kp LALT>;
        };
    };
};
